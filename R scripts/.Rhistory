library(Cairo)
detach("package:Cairo", unload = TRUE)
install(data.table)
install(library.data.table)
library(data.table)
library(data.table)
install.packages("data.table")
install.packages(rpca)
install.library(rpca)
library.rpca
library(rpca)
library(rNMF)
library(data.table)
remove.packages("data.table")
install.packages("data.table", type = "source",
repos = "https://Rdatatable.gitlab.io/data.table")
install.packages("data.table", type = "source", repos = "https://Rdatatable.gitlab.io/data.table")
remove.packages("data.table")
install.packages(data.table)
install.packages("data.table"")
install.packages("data.table")
install.packages('data.table')
library(data.table)
rm(list=ls()) # clear all variables
#sdir <- "C:/Users/KFristrup/Desktop/GRTE/2018-07-07/" # where be the data?
sdir <- "/Users/elizabethrehbein/Documents_HD/Insect Lidar/data/2016-06-08/processed_data" #location of the data
psplit <- strsplit(sdir,"/")[[1]]
sdlen <- length(psplit)
sdirt <- paste(psplit[(sdlen-1):sdlen],collapse='_') # pasting together the path for output file names; I was preparing to process multiple subdirectories, but never implemented this
library(data.table) # a faster form of data.frame, sharing many properties; indexing is different
#library(Cairo) # nicer PDF
library(rpca) # implementation of Candes's Robust PCA; decompose X into L + S, L is low-rank, S is sparse
library(rNMF) # one of several non-negative matrix factorization packages, another option for processing
clrs <- colorRampPalette(rev(c("orange","purple")))(100) # avoiding red-green
flist <- dir(path=sdir,patt="*.",recursive=T)
for (fl in flist)
nv <- as.matrix(fread(input=paste(sdir,fl,sep="")),sep=',') # rows are range bins, columns are shots
clear
